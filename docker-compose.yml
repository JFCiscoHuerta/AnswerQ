services:

  answerq-db:
    container_name: answerq-db
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${ANSWERQ_DB_USERNAME}", "-d", "${ANSWERQ_DB}"]
      interval: 10s
      retries: 5
    environment:
      POSTGRES_DB: ${ANSWERQ_DB}
      POSTGRES_USER: ${ANSWERQ_DB_USERNAME}
      POSTGRES_PASSWORD: ${ANSWERQ_DB_PASSWORD}
    volumes:
      - data-answerq:/var/lib/postgresql/data
    restart: always
    networks:
      - answerq

  answerq-app:
    container_name: answerq-app
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    expose:
      - "8082"
    env_file: .env
    depends_on:
      - answerq-db
    restart: always
    networks:
      - answerq

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - answerq

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=
      - GF_SECURITY_ADMIN_PASSWORD=
    depends_on:
      - prometheus
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - answerq

volumes:
  data-answerq:
    name: data-answerq

networks:
  answerq:
    name: answerq
    driver: bridge
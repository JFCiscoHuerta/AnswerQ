services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_ENV}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD_ENV}
    volumes:
      - data-keycloak:/opt/keycloak/data
    networks:
      - answerq

  answerq-db:
    container_name: answerq-db
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${ANSWERQ_DB_USERNAME}"]
      interval: 10s
      retries: 5
    environment:
      POSTGRES_DB: ${ANSWERQ_DB}
      POSTGRES_USER: ${ANSWERQ_DB_USERNAME}
      POSTGRES_PASSWORD: ${ANSWERQ_DB_PASSWORD}
    volumes:
      - data-answerq:/var/lib/postgresql/data
    restart: always
    networks:
      - answerq

  answerq-app:
    container_name: answerq-app
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file: .env
    depends_on:
      - keycloak
      - answerq-db
    restart: always
    networks:
      - answerq

volumes:
  data-keycloak:
    name: data-keycloak
  data-answerq:
    name: data-answerq

networks:
  answerq:
    name: answerq
    driver: bridge